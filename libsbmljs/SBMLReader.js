var FFI = require('ffi'),
    ArrayType = require('ref-array'),
    Struct = require('ref-struct'),
    StrictType = require('ref-strict'),
    ref = require('ref');
var voidPtr = ref.refType(ref.types.void);
exports.CONSTANTS = {};
var FILE = exports.FILE = StrictType(voidPtr);
var fpos_t = exports.fpos_t = StrictType(Struct({
    __darwin_off_t: ref.types.longlong,
}));
var fpos_tPtr = exports.fpos_tPtr = StrictType(ref.refType(fpos_t));
var __va_list_tag = exports.__va_list_tag = StrictType(Struct({
    gp_offset: ref.types.uint32,
    fp_offset: ref.types.uint32,
    overflow_arg_area: voidPtr,
    reg_save_area: voidPtr,
}));
var __va_list_tagPtr = exports.__va_list_tagPtr = StrictType(ref.refType(__va_list_tag));
var size_t = exports.size_t = StrictType(Struct({
    __darwin_size_t: ref.types.ulong,
}));
var size_tPtr = exports.size_tPtr = StrictType(ref.refType(size_t));
var SBMLReader_t = exports.SBMLReader_t = StrictType(voidPtr);
var SBMLDocument_t = exports.SBMLDocument_t = StrictType(voidPtr);
exports.libsbml = new FFI.Library('libsbml', {
    getLibSBMLVersion: [ref.types.int32, []],
    getLibSBMLDottedVersion: [ref.types.CString, []],
    getLibSBMLVersionString: [ref.types.CString, []],
    clearerr: [ref.types.void, [FILE]],
    fclose: [ref.types.int32, [FILE]],
    feof: [ref.types.int32, [FILE]],
    ferror: [ref.types.int32, [FILE]],
    fflush: [ref.types.int32, [FILE]],
    fgetc: [ref.types.int32, [FILE]],
    fgetpos: [ref.types.int32, [FILE, fpos_tPtr]],
    fgets: [ref.types.CString, [ref.types.CString, ref.types.int32, FILE]],
    fopen: [FILE, [ref.types.CString, ref.types.CString]],
    fprintf: [ref.types.int32, [FILE, ref.types.CString]],
    fputc: [ref.types.int32, [ref.types.int32, FILE]],
    fputs: [ref.types.int32, [ref.types.CString, FILE]],
    fread: [ref.types.ulong, [voidPtr, ref.types.ulong, ref.types.ulong, FILE]],
    freopen: [FILE, [ref.types.CString, ref.types.CString, FILE]],
    fscanf: [ref.types.int32, [FILE, ref.types.CString]],
    fseek: [ref.types.int32, [FILE, ref.types.long, ref.types.int32]],
    fsetpos: [ref.types.int32, [FILE, fpos_tPtr]],
    ftell: [ref.types.long, [FILE]],
    fwrite: [ref.types.ulong, [voidPtr, ref.types.ulong, ref.types.ulong, FILE]],
    getc: [ref.types.int32, [FILE]],
    getchar: [ref.types.int32, []],
    gets: [ref.types.CString, [ref.types.CString]],
    perror: [ref.types.void, [ref.types.CString]],
    printf: [ref.types.int32, [ref.types.CString]],
    putc: [ref.types.int32, [ref.types.int32, FILE]],
    putchar: [ref.types.int32, [ref.types.int32]],
    puts: [ref.types.int32, [ref.types.CString]],
    remove: [ref.types.int32, [ref.types.CString]],
    rename: [ref.types.int32, [ref.types.CString, ref.types.CString]],
    rewind: [ref.types.void, [FILE]],
    scanf: [ref.types.int32, [ref.types.CString]],
    setbuf: [ref.types.void, [FILE, ref.types.CString]],
    setvbuf: [ref.types.int32, [FILE, ref.types.CString, ref.types.int32, ref.types.ulong]],
    sprintf: [ref.types.int32, [ref.types.CString, ref.types.CString]],
    sscanf: [ref.types.int32, [ref.types.CString, ref.types.CString]],
    tmpfile: [FILE, []],
    tmpnam: [ref.types.CString, [ref.types.CString]],
    ungetc: [ref.types.int32, [ref.types.int32, FILE]],
    vfprintf: [ref.types.int32, [FILE, ref.types.CString, __va_list_tagPtr]],
    vprintf: [ref.types.int32, [ref.types.CString, __va_list_tagPtr]],
    vsprintf: [ref.types.int32, [ref.types.CString, ref.types.CString, __va_list_tagPtr]],
    ctermid: [ref.types.CString, [ref.types.CString]],
    fdopen: [FILE, [ref.types.int32, ref.types.CString]],
    fileno: [ref.types.int32, [FILE]],
    pclose: [ref.types.int32, [FILE]],
    popen: [FILE, [ref.types.CString, ref.types.CString]],
    __srget: [ref.types.int32, [FILE]],
    __svfscanf: [ref.types.int32, [FILE, ref.types.CString, __va_list_tagPtr]],
    __swbuf: [ref.types.int32, [ref.types.int32, FILE]],
    __sputc: [ref.types.int32, [ref.types.int32, FILE]],
    flockfile: [ref.types.void, [FILE]],
    ftrylockfile: [ref.types.int32, [FILE]],
    funlockfile: [ref.types.void, [FILE]],
    getc_unlocked: [ref.types.int32, [FILE]],
    getchar_unlocked: [ref.types.int32, []],
    putc_unlocked: [ref.types.int32, [ref.types.int32, FILE]],
    putchar_unlocked: [ref.types.int32, [ref.types.int32]],
    getw: [ref.types.int32, [FILE]],
    putw: [ref.types.int32, [ref.types.int32, FILE]],
    tempnam: [ref.types.CString, [ref.types.CString, ref.types.CString]],
    fseeko: [ref.types.int32, [FILE, ref.types.longlong, ref.types.int32]],
    ftello: [ref.types.longlong, [FILE]],
    snprintf: [ref.types.int32, [ref.types.CString, ref.types.ulong, ref.types.CString]],
    vfscanf: [ref.types.int32, [FILE, ref.types.CString, __va_list_tagPtr]],
    vscanf: [ref.types.int32, [ref.types.CString, __va_list_tagPtr]],
    vsnprintf: [ref.types.int32, [ref.types.CString, ref.types.ulong, ref.types.CString, __va_list_tagPtr]],
    vsscanf: [ref.types.int32, [ref.types.CString, ref.types.CString, __va_list_tagPtr]],
    dprintf: [ref.types.int32, [ref.types.int32, ref.types.CString]],
    vdprintf: [ref.types.int32, [ref.types.int32, ref.types.CString, __va_list_tagPtr]],
    getdelim: [ref.types.long, [voidPtr, size_tPtr, ref.types.int32, FILE]],
    getline: [ref.types.long, [voidPtr, size_tPtr, FILE]],
    asprintf: [ref.types.int32, [voidPtr, ref.types.CString]],
    ctermid_r: [ref.types.CString, [ref.types.CString]],
    fgetln: [ref.types.CString, [FILE, size_tPtr]],
    fmtcheck: [ref.types.CString, [ref.types.CString, ref.types.CString]],
    fpurge: [ref.types.int32, [FILE]],
    setbuffer: [ref.types.void, [FILE, ref.types.CString, ref.types.int32]],
    setlinebuf: [ref.types.int32, [FILE]],
    vasprintf: [ref.types.int32, [voidPtr, ref.types.CString, __va_list_tagPtr]],
    zopen: [FILE, [ref.types.CString, ref.types.CString, ref.types.int32]],
    funopen: [FILE, [voidPtr, voidPtr, voidPtr, voidPtr, voidPtr]],
    __sprintf_chk: [ref.types.int32, [ref.types.CString, ref.types.int32, ref.types.ulong, ref.types.CString]],
    __snprintf_chk: [ref.types.int32, [ref.types.CString, ref.types.ulong, ref.types.int32, ref.types.ulong, ref.types.CString]],
    __vsprintf_chk: [ref.types.int32, [ref.types.CString, ref.types.int32, ref.types.ulong, ref.types.CString, __va_list_tagPtr]],
    __vsnprintf_chk: [ref.types.int32, [ref.types.CString, ref.types.ulong, ref.types.int32, ref.types.ulong, ref.types.CString, __va_list_tagPtr]],
    streq: [ref.types.uint32, [ref.types.CString, ref.types.CString]],
    c_locale_snprintf: [ref.types.int32, [ref.types.CString, ref.types.ulong, ref.types.CString]],
    c_locale_vsnprintf: [ref.types.int32, [ref.types.CString, ref.types.ulong, ref.types.CString, __va_list_tagPtr]],
    c_locale_strtod: [ref.types.double, [ref.types.CString, voidPtr]],
    safe_fopen: [FILE, [ref.types.CString, ref.types.CString]],
    safe_strcat: [ref.types.CString, [ref.types.CString, ref.types.CString]],
    safe_strdup: [ref.types.CString, [ref.types.CString]],
    strcmp_insensitive: [ref.types.int32, [ref.types.CString, ref.types.CString]],
    util_bsearchStringsI: [ref.types.int32, [voidPtr, ref.types.CString, ref.types.int32, ref.types.int32]],
    util_file_exists: [ref.types.int32, [ref.types.CString]],
    util_trim: [ref.types.CString, [ref.types.CString]],
    util_trim_in_place: [ref.types.CString, [ref.types.CString]],
    util_NaN: [ref.types.double, []],
    util_NegInf: [ref.types.double, []],
    util_PosInf: [ref.types.double, []],
    util_NegZero: [ref.types.double, []],
    util_isInf: [ref.types.int32, [ref.types.double]],
    util_isNegZero: [ref.types.int32, [ref.types.double]],
    util_free: [ref.types.void, [voidPtr]],
    util_freeArray: [ref.types.void, [voidPtr, ref.types.int32]],
    isnan: [ref.types.int32, [ref.types.double]],
    finite: [ref.types.int32, [ref.types.double]],
    SBMLReader_create: [SBMLReader_t, []],
    SBMLReader_free: [ref.types.void, [SBMLReader_t]],
    SBMLReader_readSBML: [SBMLDocument_t, [SBMLReader_t, ref.types.CString]],
    SBMLReader_readSBMLFromFile: [SBMLDocument_t, [SBMLReader_t, ref.types.CString]],
    SBMLReader_readSBMLFromString: [SBMLDocument_t, [SBMLReader_t, ref.types.CString]],
    SBMLReader_hasZlib: [ref.types.int32, []],
    SBMLReader_hasBzip2: [ref.types.int32, []],
    readSBML: [SBMLDocument_t, [ref.types.CString]],
    readSBMLFromFile: [SBMLDocument_t, [ref.types.CString]],
    readSBMLFromString: [SBMLDocument_t, [ref.types.CString]],
});
